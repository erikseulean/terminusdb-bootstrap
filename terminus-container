m!/bin/bash

#
# CONFIG
#

# Contianer
CONTAINER=terminus-server
REPOSITORY=terminusdb/terminus-server
TAG=latest

# Volumes
STORAGE_VOLUME=/app/terminusdb/storage
CONFIG_VOLUME=/app/terminusdb/config

# Server
SERVER=localhost
PORT=6363
WORKERS=8
PASS=root

#
# FUNCTIONS
#

_usage () {
  printf "\
USAGE:
  terminus-container [COMMAND]

  help      show usage
  run       run container
  stop      stop container
  attach    attach to prolog shell
  stats     show container stats\n"
}

_confirm() {
  read -r -p "Are you sure? [y/N] " RESPONSE
  case "$RESPONSE" in
      [yY][eE][sS]|[yY]) 
          true
      ;;
      *)
          false
      ;;
  esac
  printf "\n"
}

_run () {
  sudo docker run -d -it --rm \
    --name $CONTAINER -p $PORT:$PORT \
    -v terminus-storage:$STORAGE_VOLUME:rw \
    -v terminus-config:$CONFIG_VOLUME:rw \
    -e SERVER_NAME=$SERVER \
    -e SERVER_PORT=$PORT \
    -e WORKERS=$WORKERS \
    -e DB_PASS=$PASS \
    $REPOSITORY:$TAG
}

_stop () {
  sudo docker stop $CONTAINER
}

_restart () {
  sudo docker stop $CONTAINER
}

_attach () {
  sudo docker attach $CONTAINER
}

_stats () {
  sudo docker stats $CONTAINER
}

#
# PROCESS ARGS
#

printf "\n"

if [ ! -z "$1" ]; then
  case "$1" in
    "run")
      # _build
      _run > /dev/null \
        && printf "terminus-server container started\n" \
        || printf "\nIs the container already running?\n"
    ;;
    "stop")
      _stop > /dev/null \
        && printf "terminus-server container stopped\n" \
        || printf "\nIs the container running?\n"
    ;;
    "attach")
      printf "Ctrl+p Ctrl+q to detach\n\n"
      _attach
    ;;
    "stats")
      _stats \
        || printf "\nIs the container running?\n"
    ;;
    "rm")
      _confirm && sudo docker rmi $REPOSITORY:$TAG
    ;;
    "help")
      _usage
    ;;
    *)
      printf "invalid command\n\n"
      _usage
    ;;
  esac
else
  _usage
fi

printf "\n"

# vim:ft=sh
