#!/bin/bash

#
# CONFIG
#

# Contianer
CONTAINER=${TERMINUS_CONTAINER:-terminus-server}
REPOSITORY=${TERMINUS_REPOSITORY:-terminusdb/terminus-server}
TAG=${TERMINUS_TAG:-latest} 

# Volumes
STORAGE_VOLUME=${TERMINUS_STORAGE_VOLUME:-/app/terminusdb/storage}
CONFIG_VOLUME=${TERMINUS_CONFIG_VOLUME:-/app/terminusdb/config}

# Server
SERVER=${TERMINUS_SERVER:-localhost}
PORT=${TERMINUS_PORT:-6363}
WORKERS=${TERMINUS_WORKERS:-8}
PASS=${TEMRINUS_PASS:-root}
CONSOLE=http://$SERVER:$PORT${TERMINUS_CONSOLE:-/console}

#
# FUNCTIONS
#

_usage () {
  printf "\
USAGE:
  terminus-container [COMMAND]

  help      show usage
  run       run container
  stop      stop container
  console   launch console in web browser
  attach    attach to prolog shell
  stats     show container stats
  rm        remove container and volumes\n"
}

_confirm() {
  read -r -p "Are you sure? [y/N] " RESPONSE
  case "$RESPONSE" in
      [yY][eE][sS]|[yY]) 
          return 0
      ;;
      *)
          return 1
      ;;
  esac
  printf "\n"
}

_run () {
  sudo docker run -d -it --rm \
    --name $CONTAINER -p $PORT:$PORT \
    -v terminus_storage:$STORAGE_VOLUME:rw \
    -v terminus_config:$CONFIG_VOLUME:rw \
    -e SERVER_NAME=$SERVER \
    -e SERVER_PORT=$PORT \
    -e WORKERS=$WORKERS \
    -e DB_PASS=$PASS \
    $REPOSITORY:$TAG
}

_stop () {
  sudo docker stop $CONTAINER
}

_restart () {
  sudo docker stop $CONTAINER
}

_attach () {
  sudo docker attach $CONTAINER
}

_stats () {
  sudo docker stats $CONTAINER
}

_rm () {
 if _confirm
 then
   sudo docker rmi $REPOSITORY:$TAG \
   && docker volume rm "$STORAGE_VOLUME" \
   && docker volume rm "$CONFIG_VOLUME"
 fi
}

_console () {
  python -m webbrowser "$CONSOLE"
}

#
# PROCESS ARGS
#

printf "\n"

if [ ! -z "$1" ]; then
  case "$1" in
    "run")
      # _build
      _run > /dev/null \
        && printf "terminus-server container started $CONSOLE\n" \
        || printf "\nIs the container already running?\n"
    ;;
    "stop")
      _stop > /dev/null \
        && printf "terminus-server container stopped\n" \
        || printf "\nIs the container running?\n"
    ;;
    "console")
      _console \
        || printf "this command requires python\n"
    ;;
    "attach")
      printf "Ctrl+p Ctrl+q to detach\n\n"
      _attach
    ;;
    "stats")
      _stats \
        || printf "\nIs the container running?\n"
    ;;
    "rm")
      printf "removing will delete storage and config volumes\n"
      _rm \
        || printf "\nIs the container stopped?\n"
    ;;
    "help")
      _usage
    ;;
    *)
      printf "invalid command\n\n"
      _usage
    ;;
  esac
else
  _usage
fi

printf "\n"

# vim:ft=sh
